%h1.ui.large.header
  = @book.title
  .sub.header
    = @book.author

- if @book.rights_reserved?
  .ui.warning.message
    = t '.copyright_reserved.html'

%p= @meta_description

%table.ui.definition.fixed.unstackable.table
  %tbody
    %tr
      %td.three.wide
        %small= t :words_count, scope: [:search, :defaults]
      %td.thirteen.wide
        = category_label(@book.category)
        &nbsp;
        = @book.words_count.to_s(:delimited)
        %small= t :words, scope: [:search, :defaults]
    %tr
      %td
        %small= t :popularity, scope: [:search, :defaults]
      %td
        = access_count_stars(@book.access_rating(:stars))
        &nbsp;
        = (@book.popularity > 0 ) ? @book.popularity.to_s(:delimited) : '--'
        %small= t('.popularity_unit')
    %tr
      %td
        %small= t :beginning, scope: [:search, :defaults]
      %td
        = @book.beginning
%small
  = t '.popularity_calculation_logic'
%br
%br

= link_to  @book.original_file_url, class: 'ui blue basic button', target: '_blank' do
  = t '.read_at_original'
  &nbsp;
  %small
    %i.fas.fa-external-link-alt
%br
%br

.ui.divider

%div
  %h3.ui.header
    = t '.author_popular_books', author: @book.author
  .ui.four.scrolling.cards
    - @author_books.each do |book|
      = link_to author_category_book_path(author_id: book.author_id, category_id: book.category_id, id: book.id), class: 'ui card' do
        .content
          .header= book.title.truncate(50)
          .meta.ellipsis= book.author_name
          .description.ellipsis= book.beginning
        .extra.content
          .right.floated
            = category_label(book.category)
          = access_count_stars(book.access_rating(:stars))

  %br
  %br

  %h3.ui.header
    = t '.category_popular_books', category: @book.category[:title], category_name: @book.category[:name]
  .ui.four.scrolling.cards
    - @category_books.each do |book|
      = link_to author_category_book_path(author_id: book.author_id, category_id: book.category_id, id: book.id), class: 'ui card' do
        .content
          .header= book.title.truncate(50)
          .meta.ellipsis= book.author_name
          .description.ellipsis= book.beginning
        .extra.content
          .right.floated
            = category_label(book.category)
          = access_count_stars(book.access_rating(:stars))


%script(type="application/ld+json")
  :plain
    {
      "@context":"https://schema.org",
      "@type":"Book",
      "name" : "#{ @book.title }",
      "author": {
        "@type":"Person",
        "name":"#{ @book.author_name }"
      },
      "url" : "#{ @meta_canonical_url || url_for(only_path: false) }",
      "workExample" : [{
        "@type": "Book",
        "isbn": "#{@book.id.to_s.rjust(10, '0')}",
        "bookFormat": "https://schema.org/EBook",
        "potentialAction":{
          "@type":"ReadAction",
          "target": {
            "@type":"EntryPoint",
            "urlTemplate": "#{ @meta_canonical_url || url_for(only_path: false) }",
            "actionPlatform":[
              "http://schema.org/DesktopWebPlatform",
              "http://schema.org/MobileWebPlatform"
            ]
          },
          "expectsAcceptanceOf":{
            "@type":"Offer",
            "Price":"0",
            "priceCurrency":"JPY",
            "availability": "https://schema.org/InStock"
          }
        }
      }],
      "aggregateRating": {
        "@type": "AggregateRating",
        "ratingValue": "#{ @book.access_rating }",
        "bestRating": "5",
        "ratingCount": "#{ [@book.popularity, 1].max }"
      }
    }
