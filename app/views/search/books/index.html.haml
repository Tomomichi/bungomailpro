%h1.ui.large.header
  = @meta_title

%p
  = @search_page_description
  - if @category[:id] != 'all'
    %br
    %small
      = t '.category_range', range: Book.category_range(@category[:id].to_sym), words_per_minutes: Book::WORDS_PER_MINUTES

.ui.divider
.ui.secondary.scrolling.menu
  .item(style="padding:0;")
    %i.far.fa-clock.gray
  - @categories.each do |category_id, category|
    - active = 'active' if @category == category
    - path = (category_id == :all && @author[:id] == "all") ? locale_root_url : author_category_books_path(author_id: @author[:id], category_id: category[:id])
    = link_to category[:name], path, class: "item #{active}"
.ui.divider
= form_tag(authors_path, method: :get, target: '_top', class: 'ui form') do
  .ui.transparent.fluid.left.icon.input
    %i.far.fa-user.gray
    - author_name = @author[:name] unless @author[:id] == 'all'
    = text_field_tag :author_name, author_name, placeholder: t('.author_name')
    = hidden_field_tag :category_id, @category[:id]
    - if @author[:id] != 'all'
      = link_to author_category_books_path(author_id: 'all', category_id: @category[:id]) do
        .ui.basic.icon.transparent.button
          %i.fas.fa-times.gray
    %button.ui.basic.icon.button(type="submit")
      %i.fas.fa-search.gray
      %span.computer.only= t :search, scope: [:search, :defaults]
.ui.divider
%br

.clear-float
  .left.floated
    %small
      = t('.search_offset', from: @books.offset_value + 1, to: @books.offset_value + @books.length, count: @books.total_count.to_s(:delimited))
  .right.floated
    - canonical_url = @meta_canonical_url || url_for(only_path: false)
    - text = (@author[:id]=="all" && @category[:id]=="all") ? t(:default_title, scope: [:search, :layouts, :meta]).gsub("|", "-") : @meta_title
    = link_to "https://twitter.com/intent/tweet?hashtags=#{t(:bungo_search, scope: [:search, :defaults]).downcase.delete(' ')}&url=#{canonical_url}&text=#{text}", target: :_blank, class: 'ui mini twitter button' do
      %i.fab.fa-twitter
      Tweet
%br

%table.ui.fixed.unstackable.table
  %thead
    %tr.computer.only
      %th.five.wide= t :title, scope: [:search, :defaults]
      %th.four.wide= t :author, scope: [:search, :defaults]
      %th.four.wide= t :minutes_to_read, scope: [:search, :defaults]
      - if lang_locale == :en && @category[:id] == "flash"
        %th.two.wide NGSL
      %th.two.wide= t :popularity, scope: [:search, :defaults]
      %th.five.wide.computer.only= t :beginning, scope: [:search, :defaults]

    %tr.mobile.only
      %th.six.wide
        %small= t :title, scope: [:search, :defaults]
      %th.six.wide
        %small= t :author, scope: [:search, :defaults]
      %th.nine.wide
        %small= t :minutes_to_read, scope: [:search, :defaults]
        %small.right.floated= t :popularity, scope: [:search, :defaults]
  %tbody
    - if @books.blank?
      %tr
        %td(colspan="3")= t '.no_results'
    = render partial: 'raw', collection: @books, as: :book, locals: { category: @category, author: @author }, cached: true

%small
  = t '.copyright_reserved.html'

.ui.basic.center.aligned.segment
  - params = current_page?(locale_root_url) ? { locale: nil, juvenile: nil } : {}  # /en, /juvenileなどの直下URLで、paginationがおかしくなる問題対応
  = paginate @books, window: 2, params: params
