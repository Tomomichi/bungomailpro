.mb-4
  %h1.font-bold.text-2xl
    = @book.title
  .text-gray-500
    = @book.author_name

- if @book.rights_reserved?
  .mb-4.px-3.py-2.rounded.border.border-yellow-700.bg-yellow-100.text-yellow-800.text-opacity-70.bg-opacity-20.text-sm
    = t 'copyright_reserved.html', scope: [:search, :books, :show]

.text-sm.mb-4
  = @meta_description

.mb-4
  = link_to "https://twitter.com/intent/tweet?hashtags=#{t(:bungo_search, scope: [:search, :defaults]).downcase.delete(' ')}&url=#{url_for(only_path: false)}&text=#{@meta_title}", target: :_blank, class: 'rounded bg-blue-400 text-white text-xs px-2 py-1 hover:bg-blue-500' do
    %i.fab.fa-twitter
    Tweet

.rounded.border.divide-y.mb-4.text-sm
  .flex.divide-x
    %div.text-xs.bg-gray-50.font-bold.p-2(class="w-1/4")
      = t :words_count, scope: [:search, :defaults]
    %div.p-2(class="w-3/4")
      = category_label(@book.category)
      &nbsp;
      = @book.words_count.to_s(:delimited)
      %span.text-xs= t :words, scope: [:search, :defaults]
  .flex.divide-x
    %div.text-xs.bg-gray-50.font-bold.p-2(class="w-1/4")
      = t :popularity, scope: [:search, :defaults]
    %div.p-2(class="w-3/4")
      %span.text-yellow-300= access_count_stars(@book.access_rating(:stars))
      &nbsp;
      = (@book.popularity > 0 ) ? @book.popularity.to_s(:delimited) : '--'
      %span.text-xs= t(:popularity_unit, scope: [:search, :books, :show])
  .flex.divide-x
    %div.text-xs.bg-gray-50.font-bold.p-2(class="w-1/4")
      = t :beginning, scope: [:search, :defaults]
    %div.p-2.text-sm(class="w-3/4")
      = @book.beginning
  - if lang_locale == :ja
    .flex.divide-x
      %div.text-xs.bg-gray-50.font-bold.p-2(class="w-1/4")
        = t :published_at, scope: [:search, :defaults]
      %div.p-2(class="w-3/4")
        - if @book.try(:published_at)
          #{@book.try(:published_at)}å¹´
          &nbsp;
          %small (#{@book.try(:first_edition).try(:truncate, 100)})
    .flex.divide-x
      %div.text-xs.bg-gray-50.font-bold.p-2(class="w-1/4")
        = t :character_type, scope: [:search, :defaults]
      %div.p-2(class="w-3/4")
        = @book.try(:character_type)
  - else
    .flex.divide-x
      %div.text-xs.bg-gray-50.font-bold.p-2(class="w-1/4")
        = t :author, scope: [:search, :defaults]
      %div.p-2(class="w-3/4")
        = @book.author_name
        &nbsp;
        .inline.text-sm (#{@book.try(:birth_year)} - #{@book.try(:death_year)})
    - if @book.try(:ngsl_ratio)
      .flex.divide-x
        %div.text-xs.bg-gray-50.font-bold.p-2(class="w-1/4")
          NGSL Coverage
        %div.p-2(class="w-3/4")
          #{@book.ngsl_ratio}%
          &nbsp;
          .inline.text-sm (#{@book.ngsl_words_count.to_s(:delimited)}/#{@book.unique_words_count.to_s(:delimited)}words)
          &nbsp;
          = link_to "https://storage.googleapis.com/bungomail/guten_books/ngsl/#{@book.id}/#{@book.id}.csv", download: "#{@book.id}.csv", class: 'hidden sm:inline-block text-sm border rounded px-3 py-2' do
            %i.fas.fa-download
            &nbsp;
            Download Words CSV

.text-xs.mb-8
  = t :popularity_calculation_logic, scope: [:search, :books, :show]

.mb-8.space-y-4.sm:space-y-0.sm:space-x-4.text-sm
  = link_to @book.original_file_url, class: 'inline-block w-full sm:w-auto rounded border border-blue-500 text-blue-500 px-4 py-2 hover:bg-blue-100', target: :_blank do
    = t :read_at_original, scope: [:search, :books, :show]
    %small.text-xs.ml-1
      %i.fas.fa-external-link-alt
  = link_to @book.amazon_search_url, class: 'inline-block w-full sm:w-auto rounded border border-red-500 text-red-500 px-4 py-2 hover:bg-red-100', target: :_blank do
    = t :read_at_amazon, scope: [:search, :books, :show]
    %small.text-xs.ml-1
      %i.fas.fa-external-link-alt

.border-b.mb-12

.mb-8
  %h3.font-bold.text-lg.mb-2
    = t :author_popular_books, scope: [:search, :books, :show], author: @book.author_name
  .flex.sm:grid.grid-cols-4.gap-4.overflow-x-scroll
    - @author_books.each do |book|
      = link_to author_category_book_path(author_id: book.author_id, category_id: book.category_id, id: book.id), class: 'flex flex-col rounded border w-64 sm:w-auto' do
        .p-3.border-b.flex-1
          .font-bold.text-lg
            = book.title.truncate(50)
          .text-gray-400.text-sm.truncate= book.author_name
          .text-gray-500.text-sm.truncate= book.beginning
        .p-2.flex.justify-between
          .text-yellow-300.text-sm= access_count_stars(book.access_rating(:stars))
          = category_label(book.category)

.mb-8
  %h3.font-bold.text-lg.mb-2
    = t :category_popular_books, scope: [:search, :books, :show], category: @book.category[:title], category_name: @book.category[:name]
  .flex.sm:grid.grid-cols-4.gap-4.overflow-x-scroll
    - @category_books.each do |book|
      = link_to author_category_book_path(author_id: book.author_id, category_id: book.category_id, id: book.id), class: 'flex flex-col rounded border w-64 sm:w-auto' do
        .p-3.border-b.flex-1
          .font-bold.text-lg
            = book.title.truncate(50)
          .text-gray-400.text-sm.truncate= book.author_name
          .text-gray-500.text-sm.truncate= book.beginning
        .p-2.flex.justify-between
          .text-yellow-300.text-sm= access_count_stars(book.access_rating(:stars))
          = category_label(book.category)


%script(type="application/ld+json")
  :plain
    {
      "@context":"https://schema.org",
      "@type":"Book",
      "name" : "#{ @book.title }",
      "author": {
        "@type":"Person",
        "name":"#{ @book.author_name }"
      },
      "url" : "#{ @meta_canonical_url || url_for(only_path: false) }",
      "workExample" : [{
        "@type": "Book",
        "isbn": "#{@book.id.to_s.rjust(10, '0')}",
        "bookFormat": "https://schema.org/EBook",
        "potentialAction":{
          "@type":"ReadAction",
          "target": {
            "@type":"EntryPoint",
            "urlTemplate": "#{ @meta_canonical_url || url_for(only_path: false) }",
            "actionPlatform":[
              "http://schema.org/DesktopWebPlatform",
              "http://schema.org/MobileWebPlatform"
            ]
          },
          "expectsAcceptanceOf":{
            "@type":"Offer",
            "Price":"0",
            "priceCurrency":"JPY",
            "availability": "https://schema.org/InStock"
          }
        }
      }],
      "aggregateRating": {
        "@type": "AggregateRating",
        "ratingValue": "#{ @book.access_rating }",
        "bestRating": "5",
        "ratingCount": "#{ [@book.popularity, 1].max }"
      }
    }
