.mb-30
  .ui.breadcrumb
    = link_to 'Channels', channels_path, class: 'section'
    %i.icon.right.angle.divider
    .section= @channel.title

.mb-50
  %h1.ui.large.header.mb-0
    = @channel.title
    %small
      - if @channel.public
        %i.icon.small.green.check.circle
      - else
        %i.icon.small.lock.grey

  .ui.divider.mb-0
  .ui.small.horizontal.list
    .item
      %i.icon.clock.outline
      = @channel.delivery_time.strftime("%H:%M")
    .item
      %i.icon.align.left
      = @channel.words_per_day
      words/day
    .item
      = link_to 'Edit settings', edit_channel_path(@channel)
  .ui.divider.mt-0

  - if @channel.description.present?
    %p= simple_format(@channel.description)


.mb-50
  - if @current_assignment.blank?
    .ui.secondary.center.aligned.segment
      %div= link_to 'Start Now!', channel_path(@channel), class: 'ui red responsive large button'
      %p
        Leave it up to us and we select a good book for youðŸ˜‰
      %p
        Or you can
        = link_to 'select books by yourself.', locale_root_url
  - else
    %table.ui.fixed.definition.table
      %tr
        %td.four.wide Title
        %td.twelve.wide= @current_assignment.book.title
      %tr
        %td Author
        %td= @current_assignment.book.author_name
      %tr
        %td Delivery Status
        %td= "Delivered #{@current_assignment.feeds.where.not(scheduled_at: nil).count} of #{@current_assignment.feeds.count}"
      %tr
        %td URL
        %td
          - url = @current_assignment.book_type == 'GutenBook' ? guten_book_path(@current_assignment.book_id) : aozora_book_path(@current_assignment.book_id)
          = link_to url do
            Detail
    = link_to 'Skip this book', skip_book_assignment_path(@current_assignment), method: :post, class: 'ui red small basic responsive button', data: { confirm: 'Skip the current book and start delivering next book. You can not undo this after confirming.' }


.mb-50
  .ui.fluid.secondary.pointing.two.item.mobile.only.menu
    = link_to 'Scheduled', channel_path(@channel), class: "item #{'active' unless params['status']}"
    = link_to 'Finished', channel_path(@channel, status: "finished"), class: "item #{'active' if params['status']}"
  .ui.fluid.secondary.pointing.tablet.computer.only.menu
    = link_to 'Scheduled', channel_path(@channel), class: "item #{'active' unless params['status']}"
    = link_to 'Finished', channel_path(@channel, status: "finished"), class: "item #{'active' if params['status']}"

  - if @book_assignments.blank?
    .ui.small.header
      (No book is scheduled yet.)
      .sub.header The book will be selected automatically with the search condition below:
    - if @condition
      .ui.segment
        - books_path = @condition.book_type == 'GutenBook' ? guten_books_path(q: @condition.query) : aozora_books_path(q: @condition.query)
        .item
          .content
            .meta
              .ui.label= @condition.book_type
              &nbsp;
              = link_to 'See results', books_path
            .description= @condition.query.to_s
    %p
      = link_to 'See saved searches', search_conditions_path
      or
      - books_path = I18n.locale == :en ? guten_books_path : aozora_books_path
      = link_to 'Create new search', books_path


  - else
    %table.ui.fixed.celled.table
      %thead
        %tr
          %th.one.wide #
          %th.eight.wide Title
          %th.three.wide URL
          %th.four.wide
      %tbody
        - @book_assignments.each.with_index(1) do |assignment, index|
          %tr
            %td= index
            %td
              = assignment.book.title
              %br
              %small
                by
                = assignment.book.author_name
            %td
              - url = assignment.book.original_file_url
              = link_to url, target: :_blank do
                = url
                %i.icon.small.external
            %td
              = link_to 'Delete', book_assignment_path(assignment), method: :delete,  data: { confirm: 'Delete the stocked book. You can not undo this after confirming.' }
