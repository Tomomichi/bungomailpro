.mb-30
  .ui.breadcrumb
    - books_path = I18n.locale == :en ? guten_books_path : aozora_books_path
    = link_to 'Search', books_path, class: 'section'
    %i.icon.right.angle.divider
    Saved Searches

.mb-50
  %h1.ui.large.header
    Saved Searches

  .ui.one.stackable.cards
    - @search_conditions.each do |condition|
      .card
        .ui.top.attached.secondary.segment
          .computer.only.ellipsis
            .ui.black.basic.small.label= condition.book_type
            &nbsp;
            = condition.query&.reject{|k,v| v.blank? }&.to_s
          .mobile.tablet.only
            .ui.black.basic.small.label= condition.book_type
            &nbsp;
            = condition.query&.to_s&.truncate(100)
        - if condition.channels.present?
          .content
            - condition.channels.each do |channel|
              .ui.basic.small.label
                = channel.title
                = link_to channel_path(channel, channel: { search_condition_id: nil }, redirect_to: search_conditions_path), method: :patch do
                  %i.icon.delete
        .extra.content
          .ui.secondary.menu
            .ui.simple.dropdown.item
              %i.icon.plus
              Apply
              %span.computer.only &nbsp;to Channel
              %i.icon.dropdown
              .menu
                - if (channels = @channels - condition.channels).present?
                  - channels.each do |channel|
                    = link_to channel.title, channel_path(channel, channel: {search_condition_id: condition.id}, redirect_to: search_conditions_path), method: :patch, class: 'item'
                - else
                  .item (No channel is available.)
            = link_to guten_books_path(q: condition.query), class: 'item' do
              %i.icon.search
              %span.computer.only Search
            = link_to search_condition_path(condition), method: :delete, class: 'item' do
              %i.icon.trash
              %span.computer.only Delete
            .right.menu
              .item
                %small= condition.created_at.strftime("%Y-%m-%d")
