- content_for :breadcrumb do
  = link_to '購読チャネル', subscriptions_path
  %i.icon.right.angle.divider
  = @channel.title


%h1.ui.huge.header
  = @channel.title

  - if !@channel.public?
    %small(data-tooltip="非公開" data-inverted="true")
      %i.mini.lock.icon

- if current_user && @channel.user_id == current_user.id
  %div
    - if !@subscription.try(:next_chapter_id)
      - publishable = @channel.books_count > 0 ? '' : 'disabled'
      = link_to '配信開始', subscriptions_path(channel_id: @channel.token), method: :post, class: "ui small red button #{publishable}"
    = link_to '編集する', edit_channel_path(@channel.token), class: 'ui primary small button'
    = link_to channels_path(@channel.token), method: :delete, class: 'ui black basic icon small button', 'data-tooltip'=>'削除', 'data-inverted'=>'', data: {confirm: 'チャネルを削除します。本当によろしいですか？'} do
      %i.icon.trash
      削除
- elsif current_user && current_user.default_channel
  %div
    %button.ui.red.disabled.button
      %i.icon.rss
      購読する

%div= simple_format_with_link @channel.description


- if @subscription
  .ui.small.header
    %i.icon.podcast
    配信中のタイトル
  .ui.secondary.padded.segment
    - if book = @subscription.current_chapter.try(:book)
      .ui.small.header
        #{book.author}『#{book.title}』
        = link_to book.aozora_card_url do
          %i.icon.mini.external
      %span.ui.label 次の配信
      第#{@subscription.current_chapter.index}回（全#{book.chapters_count}回）
      %i.icon.clock.outline
      = @subscription.next_deliver_at.strftime("%m月%d日 %H:%M")
    - else
      現在配信中のタイトルはありません

  .ui.secondary.pointing.menu
    - if @finished
      = link_to '今後の配信予定', channel_path(@channel.token), class: 'item'
      .active.item 過去の配信
    - else
      .active.item 今後の配信予定
      = link_to '過去の配信', channel_path(@channel.token, books: 'finished'), class: 'item'
- else
  .ui.small.dividing.header
    %i.icon.book
    配信タイトル

.ui.middle.alligned.relaxed.large.ordered.list
  - books = @channel.channel_books.where.not(book_id: @subscription.try(:next_chapter).try(:book))
  - books.each do |cb|
    - book = cb.book
    .item
      .right.floated.content
        全
        %span.ui.circular.label= book.chapters_count
        回
      .content
        .header
          = book.title
          = link_to book.aozora_card_url, target: '_blank' do
            %i.icon.mini.external
        .meta
          %small= book.author

- if books.blank?
  - message = @finished ? 'まだ配信済みの本がないようです。' : '配信予定の本がありません。'
  %small= message
