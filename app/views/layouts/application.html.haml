!!!
%html(lang="ja")
  %head
    -# Google Tag Manager
    - if Rails.env.production?
      :javascript
        (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer', "#{ENV['GOOGLE_TAG_MANAGER_ID']}");

    = render partial: 'layouts/meta'
    = csrf_meta_tags
    = csp_meta_tag
    = javascript_importmap_tags
    = stylesheet_link_tag "tailwind", "inter-font", "data-turbo-track": "reload"
    %link(rel="preconnect" href="https://fonts.gstatic.com")
    %link(href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700&display=swap" rel="stylesheet")
    %link(rel="manifest" href="/manifest.json")


  %body.text-gray-700.font-sans
    -# Google Tag Manager
    - if Rails.env.production?
      %noscripts
        %iframe(src="https://www.googletagmanager.com/ns.html?id=#{ENV['GOOGLE_TAG_MANAGER_ID']}" height="0" width="0" style="display:none; visibility:hidden;")

    - if current_page?(root_url) || current_page?('/lp_new')
      = yield
    - else
      .mb-10.shadow(style="background-image: url('/assets/images/seigaiha.png')")
        = render partial: 'layouts/header'
      .container.mx-auto.max-w-screen-lg.px-2(class="sm:px-0")
        .mb-32.grid.grid-cols-1(class="sm:grid-cols-3 sm:gap-12")
          .col-span-2.border-b.pb-8.mb-8(class="sm:border-b-0 sm:pb-0 sm:mb-0")
            = render partial: 'layouts/breadcrumb'
            = render partial: 'layouts/flash', locals: { style: '-mt-4 mb-4' }
            = yield
          .col-span-1
            = render partial: 'layouts/sidebar'

    = render partial: 'layouts/footer'

    -# ServiceWorker
    :javascript
      window.addEventListener('load', function () {
        if ('serviceWorker' in navigator) {
          navigator.serviceWorker.register("/service-worker.js")
            .then(function (registration) {
              console.log("serviceWorker registed.");
            }).catch(function (error) {
            console.warn("serviceWorker error.", error);
          });
        }
      });

      navigator.serviceWorker.ready.then((serviceWorkerRegistration) => {
        serviceWorkerRegistration.pushManager.subscribe({
          userVisibleOnly: true,
          applicationServerKey: new Uint8Array(#{ vapid_key_decoded.bytes })
        }).then(subscription => {
          const csrfToken = document.getElementsByName("csrf-token")[0].content;

          fetch('/user', {
            method: 'PATCH',
            headers: {
              "X-CSRF-Token": csrfToken,
              'Accept': 'application/json',
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(subscription.toJSON())
          })
          .then(function(response){
            const response_message = response.status + ':' + response.statusText
            console.log(response_message);
          });
        });
      });
