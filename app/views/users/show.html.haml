.mb-8
  %h1.text-lg.font-bold.mb-4.flex.items-center
    %svg(class="w-6 h-6 mt-1 mr-2" focusable="false" viewBox="0 0 24 24" aria-hidden="true")
      %path(d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z")
    マイページ

.mb-12
  .mb-4.text-sm.bg-gray-100.rounded.px-4.py-2
    = current_user.email

.mb-12
  %h5.font-bold.text-lg.mb-4.pb-2.border-b
    現在のプラン
  %div.font-bold.mb-2.rounded.border.px-2.py-1.inline-block
    = current_user.plan_before_type_cast.camelize
  - if current_user.trialing?
    .text-sm
      （#{current_user.trial_end_date.strftime("%Y年%-m月%-d日")}まで無料トライアル）
  - elsif current_user.trial_scheduled?
    .text-sm
      （#{current_user.trial_start_date.strftime("%Y年%-m月%-d日")}から無料トライアル）

.mb-12
  %h5.font-bold.text-lg.mb-4.pb-2.border-b
    お支払い情報の管理
  - if @customer_portal_url
    %div.mb-4
      = link_to  @customer_portal_url, target: :_blank, class: "inline-flex items-center space-x-1 bg-indigo-600 text-white rounded px-4 py-2 hover:opacity-75" do
        %span 支払情報管理ページを開く
        %svg(xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4")
          %path(stroke-linecap="round" stroke-linejoin="round" d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25")

    .mb-4.text-sm
      .mb-2 リンク先のページでは、以下の操作が可能です。
      %ul.list-disc.list-inside
        %li クレジットカード情報の登録・更新
        %li お支払履歴の確認
        %li お支払いの停止（キャンセル）
  - else
    お支払い情報が登録されていません


.mb-12
  %h5.font-bold.text-lg.mb-4.pb-2.border-b
    カスタム配信
  - if @upcoming_assignments.present?
    %ul(class="space-y-8 sm:space-y-4")
      - @upcoming_assignments.each do |ua|
        %li
          = link_to book_assignment_path(ua), class: "flex justify-between space-x-4 items-center hover:bg-gray-50 px-2 py-3" do
            %div.space-y-1
              .font-bold= ua.book.author_and_book_name
              .text-sm
                = "#{ua.start_date.strftime("%Y年%-m月%-d日")} 〜 #{ua.end_date.strftime("%Y年%-m月%-d日")}"
            %div
              %svg(xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 text-gray-500")
                %path(stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5")

  - else
    %div
      = link_to "カスタム配信", page_path(:custom_delivery), class: "text-link"
      が登録されていません。

- if current_user.email == "tomomichi.onishi@gmail.com"
  .mb-12
    %h5.font-bold.text-lg.mb-4.pb-2.border-b
      プッシュ通知
    - if current_user.webpush_endpoint
      %div.mb-4
        通知設定が完了しています。
      %div.mb-4.flex.items-center.space-x-4
        %div(onclick="unsubscribe()" class="cursor-pointer inline-flex items-center space-x-1 border border-red-700 text-red-700 rounded px-4 py-2 hover:opacity-75")
          %svg(xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4")
            %path(stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12")
          %span 通知設定を解除する
        %div
          = link_to webpush_test_user_path, data: { "turbo-method": :post }, remote: true, class: "inline-flex items-center space-x-1 border rounded px-4 py-2 hover:opacity-75" do
            %svg(xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4")
              %path(stroke-linecap="round" stroke-linejoin="round" d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0M3.124 7.5A8.969 8.969 0 015.292 3m13.416 0a8.969 8.969 0 012.168 4.5")
            %span 通知をテストする
    - else
      %div.mb-4
        %div(onclick="subscribe()" class="cursor-pointer inline-flex items-center space-x-1 bg-indigo-600 text-white rounded px-4 py-2 hover:opacity-75")
          この端末を通知先として登録する


  :javascript
    async function subscribe() {
      if (!('serviceWorker' in navigator) || !('PushManager' in window)) {
        alert("申し訳ありませんがお使いのブラウザではプッシュ通知がサポートされていないようです。。")
        return;
      }

      try {
        const permission = await Notification.requestPermission();
        if (permission !== 'granted') {
          alert("プッシュ通知がブロックされています。ブラウザの設定でプッシュ通知を許可してください。")
          return;
        }

        const serviceWorkerRegistration = await navigator.serviceWorker.ready;
        const subscription = await serviceWorkerRegistration.pushManager.subscribe({
          userVisibleOnly: true,
          applicationServerKey: new Uint8Array(#{ vapid_key_decoded.bytes })
        })
        const response = await sendSubscriptionToServer(subscription.toJSON());
        console.log(response.status + ':' + response.statusText);
        alert("通知設定が完了しました！")
        location.reload();
      } catch (error) {
        console.error('Failed to subscribe push notification:', error);
        alert("通知設定に失敗しました。。")
        return;
      }
    }

    async function unsubscribe() {
      const serviceWorkerRegistration = await navigator.serviceWorker.ready;
      const subscription = await serviceWorkerRegistration.pushManager.getSubscription();
      if(subscription) {
        await subscription.unsubscribe();
      }

      const params = {
        endpoint: null,
        p256dh: null,
        auth: null
      }
      const response = await sendSubscriptionToServer(params);
      console.log(response.status + ':' + response.statusText);
      alert("通知設定を解除しました！")
      location.reload();
    }

    function sendSubscriptionToServer(params) {
      const csrfToken = document.getElementsByName("csrf-token")[0].content;

      return fetch('/user', {
        method: 'PATCH',
        headers: {
          "X-CSRF-Token": csrfToken,
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(params)
      })
    }